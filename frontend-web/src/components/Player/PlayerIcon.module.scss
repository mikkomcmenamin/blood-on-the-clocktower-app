.playerRotator {
  width: min(45vw, 45vh);
  position: absolute;
  transform-origin: 100% 50%;
  transition: transform 0.2s ease-in-out;
  top: 50%;
  left: 50%;
  display: flex;
}

.playerContent {
  --character-image-url: url("");
  // linear gradient from wooden brown to black
  background: linear-gradient(#ffdead, #000);
  border: 0.5rem solid #000000;
  border-radius: 50%;
  --ball-size: calc(2rem + (30rem / var(--num-players)));
  width: clamp(3rem, var(--ball-size), 7rem);
  height: clamp(3rem, var(--ball-size), 7rem);
  color: rgb(255, 255, 255);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  transition: scale 0.5s ease-in-out;
  // shadow etc to make this look like a raised button
  box-shadow: 0 0 1rem rgb(255, 255, 255, 0.5);
  cursor: pointer;

  & > .characterUnderlay {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: var(--character-image-url);
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    border-radius: 50%;
    opacity: 0.5;
    z-index: -1;
  }

  @media (min-width: 768px) {
    --ball-size: calc(4rem + (50rem / var(--num-players)));
    width: clamp(8rem, var(--ball-size), 18rem);
    height: clamp(8rem, var(--ball-size), 18rem);
  }

  & > * {
    cursor: pointer;
  }

  &.shroud {
    box-shadow: none;
    border: none;
  }

  &.nightDeath::after {
    content: "";
    position: absolute;
    top: 0;
    left: 50%;
    width: 100%;
    height: 100%;
    background-image: url("../../assets/shroud.png");
    background-size: 24% 40%;
    background-repeat: no-repeat;
    background-position: center top;
    transform: translate(-50%, 0);
    animation: flashing 2s ease-out infinite;

    @keyframes flashing {
      0% {
        opacity: 0.5;
      }
      50% {
        opacity: 1;
      }
      100% {
        opacity: 0.5;
      }
    }
  }

  &.shroud::after {
    content: "";
    position: absolute;
    top: 0;
    left: 50%;
    width: 100%;
    height: 40%;
    background-image: url("../../assets/shroud.png");
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    transform: translate(-50%, 0);
  }

  &.notInvolvedInNomination {
    scale: 0.9;
    box-shadow: 0 0 1rem #888;
  }

  // .player-content with .nominator should have a very large blue box shadow, while .nominee should have red
  &.nominator {
    background: radial-gradient(circle at 100px 100px, #646cfffc, #000);
    box-shadow: 0 0 4rem #646cffaa;
    font-weight: 800;
    scale: 1.1;
  }
  &.nominee {
    background: radial-gradient(circle at 100px 100px, #ff6464fc, #000);
    box-shadow: 0 0 4rem #ff6464aa;
    font-weight: 800;
    scale: 1.1;
  }

  &.votingDisabled {
    opacity: 0.5;
    cursor: not-allowed;

    & > * {
      cursor: not-allowed;
    }
  }

  &.hasVoted {
    // cool animation that appears when they first vote
    animation: hasVoted 0.5s ease-out;
    @keyframes hasVoted {
      0% {
        scale: 1;
      }
      50% {
        scale: 1.5;
      }
      100% {
        scale: 1.1;
        // red border
      }
    }
    border: 0.5rem solid #ff6464;
    scale: 1.1;
  }

  &.onTheBlock {
    background: transparent;
    animation: pulse 3s ease-out infinite;

    @keyframes pulse {
      0% {
        outline: 2px solid #ff646422;
        box-shadow: 0 0 4rem #ff646422;
      }
      50% {
        outline: 6px solid #ff6464;
        box-shadow: 0 0 20rem #ff6464;
      }
      100% {
        outline: 2px solid #ff646422;
        box-shadow: 0 0 4rem #ff646422;
      }
    }
  }

  &.onTheBlock::before {
    // overlay the skull svg on top of the player icon
    content: "";
    // add a red overlay on top of the skull
    background-image: linear-gradient(black, rgb(189, 189, 189)),
      url("../../assets/skull.svg");
    background-blend-mode: multiply;
    opacity: 1;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    z-index: -1;
  }
}

.name {
  display: flex;
  justify-content: center;
  align-items: center;
  // Prevent selecting the name since it messes up the desired long press behavior
  -webkit-user-select: none; /* Safari */
  user-select: none;
}

.ghostVote {
  position: fixed;
  bottom: 0;
}

@for $i from 1 through 100 {
  .playerRotator:nth-of-type(#{$i}) {
    transform: translate(-100%, -50%)
      rotate(calc(90deg + 360deg / var(--num-players) * calc(#{$i} - 1)));
    & > * {
      transform: rotate(
        calc(-90deg - 360deg / var(--num-players) * calc(#{$i} - 1))
      );
    }
  }
}

.forbiddenCircle {
  position: absolute;
  width: 50px;
  height: 50px;
  background-color: white;
  color: white;
  border-radius: 50%;
  border: 2px solid red;
  box-shadow: 0 0 1rem 2px red;

  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;

  &.cannotNominate {
    bottom: 0;
    left: 0;
    transform: translate(0, -50%);
    background-image: url("../../assets/nominator.png");
  }

  &.cannotBeNominated {
    bottom: 0;
    right: 0;
    transform: translate(0, -50%);
    background-image: url("../../assets/nominee.png");
  }

  &::after {
    // diagonal line
    content: "";
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: red;
    transform: rotate(45deg);
  }
}
