body {
  --nominator-id: 0;
  --nominee-id: 0;
}

.App {
  height: 100%;
}

// #background-video is a container that contains the background video <video> element and a div#background-video-overlay
#background-video {
  position: fixed;
  top: -2px;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  overflow: hidden;
  // Make the video fill the whole container
  & > video {
    position: absolute;
    top: 50%;
    left: 50%;
    min-width: 100%;
    min-height: 100%;
    width: auto;
    height: auto;
    z-index: -100;
    transform: translate(-50%, -50%);
  }
  // Make the overlay fill the whole container
  & > div#background-video-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -99;
    background: rgba(0, 0, 0, 0.6);
  }
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

#player-circle {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: min(75vw, 75vh);
  height: min(75vw, 75vh);
  
  border-radius: 50%;
  will-change: opacity;
  background-image: url('./assets/clockface.jpg');
  background-size: cover;
  // Raise it from the foreground as it if it was floating in the air
  box-shadow: 0 0 2rem #646cffaa;
}

.player {
  width: min(45vw, 45vh);
  position: absolute;
  transform-origin: 100% 50%;
  transition: transform 0.5s ease-in-out;
  top: 50%;
  left: 50%;
  display: flex;
}

.player-content {
  background: white;
  border-radius: 50%;
  width: min(11vw, 11vh);
  height: min(11vw, 11vh);
  color: black;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  // shadow etc to make this look like a raised button
  box-shadow: 0 0 2rem red;
  cursor: pointer;

  & > * {
    cursor: pointer;
  }
}

.name {
  display: flex;
  justify-content: center;
  align-items: center;
}

@for $i from 1 through 100 {
  .player:nth-of-type(#{$i}) {
    transform: translate(-100%, -50%) rotate(calc(90deg + 360deg / var(--num-players) * calc(#{$i} - 1)));
    & > * {
      transform: rotate(calc(-90deg - 360deg / var(--num-players) * calc(#{$i} - 1)));
    }
  }
}

.clockhand {
  width: 90%;
  height: 90%;
  position: absolute;
  top: 50%;
  left: 50%;
  display: flex;
  justify-content: center;
  align-items: center;

  // add a smooth transition to the rotation
  transition: transform 0.5s ease-in-out;

  & > img {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  &.clockhand-minute {
    transform: translate(-50%, -50%) rotate(calc(360deg / var(--num-players) * var(--nominee-id)));
  }
  &.clockhand-hour {
    transform: translate(-50%, -50%) rotate(calc(360deg / var(--num-players) * var(--nominator-id)));
  }
}

.modal {
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  background-color: rgb(0,0,0); /* Fallback color */
  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
  display: flex;
  justify-content: center;
  align-items: center;
}

.modal-content {
  background-color: rgba(0,0,0,0.9);
  margin: auto;
  padding: 2rem;
  border: 1px solid #888;
  width: 50%;
  display: flex;
  flex-direction: column;
  align-items: center;

  & > form {
    display: flex;
    flex-direction: row;
    align-items: center;
  }

  & > .buttons {
    display: flex;
    justify-content: space-evenly;
    margin-top: 1rem;
  }

  // make text input and buttons nicer looking (box shadows, border radiuses etc)
  input, button {
    border-radius: 0.5rem;
    border: 1px solid #888;
    padding: 0.5rem;
    box-shadow: 0 0 0.5rem #888;
  }
}

