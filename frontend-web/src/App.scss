body {
  --nominator-id: 0;
  --nominee-id: 0;
  font-size: 1.5vw;
}

button {
  border: none;
  outline: none;
  cursor: pointer;
}

// Mobile first: define mobile layout first, then add media queries for larger screens
.App {
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  gap: 10vh;
  align-items: center;
  padding-top: 10vh;
}

// Desktop layout
@media (min-width: 768px) {
  .App {
    justify-content: center;
    flex-direction: row;
    padding-top: 0;
  }
}


// #background-video is a container that contains the background video <video> element and a div#background-video-overlay
#background-video {
  position: fixed;
  top: -2px;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  overflow: hidden;
  // Make the video fill the whole container
  & > video {
    position: absolute;
    top: 50%;
    left: 50%;
    min-width: 100%;
    min-height: 100%;
    width: auto;
    height: auto;
    z-index: -100;
    transform: translate(-50%, -50%);
  }
  // Make the overlay fill the whole container
  & > div#background-video-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -99;
    background: rgba(0, 0, 0, 0.6);
  }
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

#play-area-container {
  flex: 1;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

#player-circle {
  position: relative;
  width: min(75vw, 75vh);
  height: min(75vw, 75vh);
  
  border-radius: 50%;
  background-image: url('./assets/clockface.jpg');
  background-size: cover;
  // Raise it from the foreground as it if it was floating in the air
  box-shadow: 0 0 2rem #646cffaa;
}

.player {
  width: min(45vw, 45vh);
  position: absolute;
  transform-origin: 100% 50%;
  transition: transform 0.5s ease-in-out;
  top: 50%;
  left: 50%;
  display: flex;
}

.player-content {
  background: white;
  border-radius: 50%;
  width: 6em; // relative to own font size to prevent layout issues
  height: 6em;
  color: black;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  transition: scale 1s ease-in-out;
  // shadow etc to make this look like a raised button
  box-shadow: 0 0 1rem #646cffaa;
  cursor: pointer;

  & > * {
    cursor: pointer;
  }
}

// when the #player-circle has class .nomination,
// any .player-content who doesn't have class '.in-nomination' should be dehighlighted
#player-circle.activeNomination  {
  & > .player > .player-content:not(.in-nomination) {
    opacity: 0.5;
    background: #888;
    box-shadow: 0 0 1rem #888;
  }

  // .player-content with .nominator should have a very large blue box shadow, while .nominee should have red
  & > .player > .player-content.nominator {
    box-shadow: 0 0 4rem #646cffaa;
    font-weight: 800;
    scale: 1.1;
  }
  & > .player > .player-content.nominee {
    box-shadow: 0 0 4rem #ff6464aa;
    font-weight: 800;
    scale: 1.1;
  }
}

.name {
  display: flex;
  justify-content: center;
  align-items: center;
}

@for $i from 1 through 100 {
  .player:nth-of-type(#{$i}) {
    transform: translate(-100%, -50%) rotate(calc(90deg + 360deg / var(--num-players) * calc(#{$i} - 1)));
    & > * {
      transform: rotate(calc(-90deg - 360deg / var(--num-players) * calc(#{$i} - 1)));
    }
  }
}

.clockhand {
  pointer-events: none;
  width: 90%;
  height: 90%;
  position: absolute;
  top: 50%;
  left: 50%;
  display: flex;
  justify-content: center;
  align-items: center;

  // add a smooth transition to the rotation
  transition: transform 0.5s ease-in-out;

  & > img {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  &.clockhand-minute {
    transform: translate(-50%, -50%) rotate(calc(360deg / var(--num-players) * var(--nominee-id)));
  }
  &.clockhand-hour {
    transform: translate(-50%, -50%) rotate(calc(360deg / var(--num-players) * var(--nominator-id)));
  }
}

.modal {
  position: fixed; /* Stay in place */
  z-index: 1000; /* Sit on top */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  background-color: rgb(0,0,0); /* Fallback color */
  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
  display: flex;
  justify-content: center;
  align-items: center;
}

.modal-content {
  background-color: rgba(0,0,0,0.9);
  margin: auto;
  padding: 2rem;
  border: 1px solid #888;
  width: 50%;
  display: flex;
  flex-direction: column;
  align-items: center;

  & > form {
    display: flex;
    flex-direction: row;
    align-items: center;
  }

  & > .buttons {
    display: flex;
    justify-content: space-evenly;
    margin-top: 1rem;
  }

  // make text input and buttons nicer looking (box shadows, border radiuses etc)
  input, button {
    border-radius: 0.5rem;
    border: 1px solid #888;
    padding: 0.5rem;
    box-shadow: 0 0 0.5rem #888;
  }
}

nav {
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  align-items: flex-end;
  padding: 1rem;
  background: rgba(0, 0, 0, 0.6);
  width: 100%;
  box-shadow: 0 0 1rem black;
  // should flex shrink as much as possible
  flex-shrink: 0;

}

div#hamburger {
  display: none;
}

#menu {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
  gap: 1rem;
  pointer-events: none;

  & > button {
    // make it look like a material button with shadow and padding etc
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    border: 1px solid #888;
    box-shadow: 0 0 0.5rem #888;
  }
}

// On desktop devices, the hamburger should be visible and take up a vertical slice from the right side
// #menu should only be visible when 'nav' or its children are focused
@media (min-width: 768px) {
  div#hamburger {
    display: block;
    position: absolute;
    right: 0;
    top: 0;
    width: 5rem;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    pointer-events: auto;
  }

  #menu {
    display: none;
  }

  nav {
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100%;
    width: 2rem;
    padding: 0;
    transition: width 0.5s ease-in-out, background 0.5s ease-in-out;
    background: transparent;
    box-shadow: none;
  }

  nav:focus-within, nav:hover {
    width: 10rem;
    background: rgba(0, 0, 0, 0.6);
    box-shadow: 0 0 1rem black;

    #menu {
      display: flex;
      flex-wrap: wrap;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }
  }
}